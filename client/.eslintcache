[{"/Users/user/Desktop/Work/www/rezoso_react/client/src/index.js":"1","/Users/user/Desktop/Work/www/rezoso_react/client/src/App.js":"2","/Users/user/Desktop/Work/www/rezoso_react/client/src/reportWebVitals.js":"3","/Users/user/Desktop/Work/www/rezoso_react/client/src/actions/users.actions.js":"4","/Users/user/Desktop/Work/www/rezoso_react/client/src/actions/post.actions.js":"5","/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/index.js":"6","/Users/user/Desktop/Work/www/rezoso_react/client/src/actions/user.actions.js":"7","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/AppContext.js":"8","/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/user.reducer.js":"9","/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/users.reducer.js":"10","/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/post.reducer.js":"11","/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/error.reducer.js":"12","/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/allpost.reducer.js":"13","/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/trending.reducer.js":"14","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Routes/index.js":"15","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Navbar.js":"16","/Users/user/Desktop/Work/www/rezoso_react/client/src/pages/Home.js":"17","/Users/user/Desktop/Work/www/rezoso_react/client/src/pages/Trending.js":"18","/Users/user/Desktop/Work/www/rezoso_react/client/src/pages/Profil.js":"19","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Thread.js":"20","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Trends.js":"21","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Utils.js":"22","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Log/Login.js":"23","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Log/LogOut.js":"24","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Post/NewPostForm.js":"25","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Stains/FootStains.js":"26","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Profil/FriendsHint.js":"27","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Profil/UpdateProfil.js":"28","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Post/Card.js":"29","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Stains/HeadStains.js":"30","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Log/index.js":"31","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Profil/FollowHandler.js":"32","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Profil/Uploadimg.js":"33","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Post/CardComments.js":"34","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Post/DeleteCard.js":"35","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Post/LikeButton.js":"36","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Log/SignUpForm.js":"37","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Log/SignInForm.js":"38","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Post/EditDeleteComment.js":"39","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Loader.js":"40","/Users/user/Desktop/Work/www/rezoso_react/client/src/pages/NotFound.js":"41","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Modal/ModalNewPost.js":"42","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Footer.js":"43"},{"size":812,"mtime":1632307696578,"results":"44","hashOfConfig":"45"},{"size":929,"mtime":1632310973639,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":1612171054175,"results":"47","hashOfConfig":"45"},{"size":400,"mtime":1631174858118,"results":"48","hashOfConfig":"45"},{"size":4616,"mtime":1631272453939,"results":"49","hashOfConfig":"45"},{"size":460,"mtime":1612974758318,"results":"50","hashOfConfig":"45"},{"size":2478,"mtime":1631174833469,"results":"51","hashOfConfig":"45"},{"size":83,"mtime":1612343051571,"results":"52","hashOfConfig":"45"},{"size":979,"mtime":1612788469408,"results":"53","hashOfConfig":"45"},{"size":287,"mtime":1612707928243,"results":"54","hashOfConfig":"45"},{"size":2152,"mtime":1612882997833,"results":"55","hashOfConfig":"45"},{"size":596,"mtime":1612970473817,"results":"56","hashOfConfig":"45"},{"size":272,"mtime":1612973363145,"results":"57","hashOfConfig":"45"},{"size":293,"mtime":1612974709166,"results":"58","hashOfConfig":"45"},{"size":1239,"mtime":1632402527132,"results":"59","hashOfConfig":"45"},{"size":1568,"mtime":1632404632103,"results":"60","hashOfConfig":"45"},{"size":2382,"mtime":1632420118381,"results":"61","hashOfConfig":"45"},{"size":1234,"mtime":1632417366203,"results":"62","hashOfConfig":"45"},{"size":1378,"mtime":1632420077024,"results":"63","hashOfConfig":"45"},{"size":1353,"mtime":1632238019814,"results":"64","hashOfConfig":"45"},{"size":3720,"mtime":1632228571923,"results":"65","hashOfConfig":"45"},{"size":877,"mtime":1613477672715,"results":"66","hashOfConfig":"45"},{"size":414,"mtime":1631816485901,"results":"67","hashOfConfig":"45"},{"size":1040,"mtime":1631175048138,"results":"68","hashOfConfig":"45"},{"size":8868,"mtime":1632167167563,"results":"69","hashOfConfig":"45"},{"size":274,"mtime":1613407786947,"results":"70","hashOfConfig":"45"},{"size":3264,"mtime":1632136996644,"results":"71","hashOfConfig":"45"},{"size":9368,"mtime":1632320399085,"results":"72","hashOfConfig":"45"},{"size":13349,"mtime":1632238097914,"results":"73","hashOfConfig":"45"},{"size":269,"mtime":1613407642057,"results":"74","hashOfConfig":"45"},{"size":1207,"mtime":1612179141762,"results":"75","hashOfConfig":"45"},{"size":2422,"mtime":1632065863864,"results":"76","hashOfConfig":"45"},{"size":554,"mtime":1632139488571,"results":"77","hashOfConfig":"45"},{"size":3540,"mtime":1632238522345,"results":"78","hashOfConfig":"45"},{"size":535,"mtime":1613668626350,"results":"79","hashOfConfig":"45"},{"size":2031,"mtime":1631354535130,"results":"80","hashOfConfig":"45"},{"size":4318,"mtime":1631529342643,"results":"81","hashOfConfig":"45"},{"size":1708,"mtime":1631175083768,"results":"82","hashOfConfig":"45"},{"size":2373,"mtime":1631281735550,"results":"83","hashOfConfig":"45"},{"size":1678,"mtime":1631816933263,"results":"84","hashOfConfig":"45"},{"size":635,"mtime":1632417377258,"results":"85","hashOfConfig":"45"},{"size":531,"mtime":1632317180570,"results":"86","hashOfConfig":"45"},{"size":3889,"mtime":1632418822807,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"1ltd9bb",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"91"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"91"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"91"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"91"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"91"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"91"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"91"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/user/Desktop/Work/www/rezoso_react/client/src/index.js",["183"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/index.scss'; \nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { getUsers } from \"./actions/users.actions\";\n\n//DEV TOOLS\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport { getPosts } from './actions/post.actions';\n\n\nconst store= createStore(\n  rootReducer, composeWithDevTools(applyMiddleware(thunk, logger))\n)\n\nstore.dispatch(getUsers());\nstore.dispatch(getPosts());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />,\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n",["184","185"],"/Users/user/Desktop/Work/www/rezoso_react/client/src/App.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/reportWebVitals.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/actions/users.actions.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/actions/post.actions.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/index.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/actions/user.actions.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/AppContext.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/user.reducer.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/users.reducer.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/post.reducer.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/error.reducer.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/allpost.reducer.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/reducers/trending.reducer.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Routes/index.js",["186"],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Navbar.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/pages/Home.js",["187","188","189"],"/Users/user/Desktop/Work/www/rezoso_react/client/src/pages/Trending.js",["190"],"/Users/user/Desktop/Work/www/rezoso_react/client/src/pages/Profil.js",["191","192"],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Thread.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Trends.js",["193"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getTrends } from '../actions/post.actions';\nimport { isEmpty } from './Utils';\n\nconst Trends = () => {\n  const posts = useSelector((state) => state.allpostReducer);\n  const usersData = useSelector((state) => state.usersReducer);\n  const trendList = useSelector((state) => state.trendingReducer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isEmpty(posts[0])) {\n      const postsArr = Object.keys(posts).map((i) => posts[i]);\n      let sortedArray = postsArr.sort((a, b) => {\n        return b.likers.length - a.likers.length;\n      });\n      sortedArray.length = 1;\n      dispatch(getTrends(sortedArray));\n    }\n  }, [posts, dispatch]);\n\n  return (\n    <div className=\"trending-container\">\n      <h4>L'œuvre du moment</h4>\n      <NavLink exact to=\"/trending\">\n        <ul>\n          {trendList.length &&\n            trendList.map((post) => {\n              return (\n                <li key={post._id}>\n                  <img\n                    src=\"./img/cadre_brush.png\"\n                    alt=\"cadre\"\n                    className=\"cadre\"\n                  />\n                  <div>\n                    {post.picture && (\n                      <img\n                        src={post.picture}\n                        alt=\"post-pic\"\n                        className=\"trends_img\"\n                      />\n                    )}\n                    {post.video && (\n                      <iframe\n                        width=\"500\"\n                        height=\"300\"\n                        src={post.video}\n                        frameborder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        title={post._id}\n                        className=\"trends_img\"\n                      ></iframe>\n                    )}\n                    {isEmpty(post.picture) && isEmpty(post.video) && (\n                      <img\n                        src={\n                          usersData[0] &&\n                          usersData\n                            .map((user) => {\n                              if (user._id === post.posterId) {\n                                return user.picture;\n                              } else return null;\n                            })\n                            .join(\"\")\n                        }\n                        alt=\"profil-pic\"\n                        className=\"trends_img\"\n                      />\n                    )}\n                  </div>\n                  <div className=\"trend-content\">\n                    <p>{post.message}</p>\n                    {/*    const [img, setImg] = useState(\"./img/read.png\");\n                                      const [span, setSpan] = useState(\"Lire\");\n                                      <div className=\"read-stain\"\n                                  onMouseEnter={() => {setImg(\"./img/play_hover.png\"); setSpan('');}}\n                                  onMouseLeave={() => {setImg(\"./img/read.png\"); setSpan('Lire');}}>\n                                    <img\n                                      src={img}\n                                      alt=\"play-stain\"\n                                      id=\"play_stain\"\n                                    />\n                                    <span>{span}</span>\n                                  </div> */}\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Trends;","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Utils.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Log/Login.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Log/LogOut.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Post/NewPostForm.js",["194","195"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, NavLink } from 'react-router-dom';\nimport { addPost, getPosts } from '../../actions/post.actions';\nimport { isEmpty, timestampParser } from '../Utils';\nimport tof from \"../../styles/assets/img/photo_btn.png\";\nimport pen from \"../../styles/assets/img/pen_thumb_orange.png\";\nimport border from \"../../styles/assets/img/cadre_brush.png\";\nimport Loader from '../Loader';\n\n\nconst NewPostForm = ({actualWidth, setModalNewPost}) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [message, setMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState(false);\n    const[postPicture, setPostPicture] = useState(null);\n    const [video, setVideo] = useState('');\n    const [file, setFile] = useState();\n    const userData = useSelector((state) => state.userReducer);\n    const error = useSelector((state) => state.errorReducer.postError);\n    const dispatch = useDispatch();\n\n    const handlePost = async (e) => {\n      e.preventDefault();\n        if (message || postPicture || video) {\n            const data = new FormData();\n            data.append('posterId', userData._id);\n            data.append('message', message);\n            if (file) data.append(\"file\", file);\n            data.append('video', video);\n\n            await dispatch(addPost(data));\n            dispatch(getPosts());\n            cancelPost();\n            setModalNewPost(false);\n\n        } else {\n            setErrorMessage(true);\n        }\n    };\n\n    const handlePicture = (e) => {\n        setPostPicture(URL.createObjectURL(e.target.files[0]));\n        setFile(e.target.files[0]);\n        setErrorMessage(false);\n        setVideo('');\n    };\n\n    const handleChange = (e) => {\n      setErrorMessage(false);\n      setMessage(e.target.value);\n    }\n    \n    \n\n    const cancelPost = () => {\n        setMessage('');\n        setPostPicture('');\n        setVideo('');\n        setFile('');\n        setErrorMessage(false);\n    };\n\n    useEffect(() => {\n        if (!isEmpty(userData)) setIsLoading(false);\n       \n\n        const handleVideo = () => {\n          let findLink = message.split(\" \");\n          for (let i = 0; i < findLink.length; i++) {\n            if (\n              findLink[i].includes(\"https://www.yout\") ||\n              findLink[i].includes(\"https://yout\")\n            ) {\n              let embed = findLink[i].replace(\"watch?v=\", \"embed/\");\n              setVideo(embed.split(\"&\")[0]);\n              findLink.splice(i, 1);\n              setMessage(findLink.join(\" \"));\n              setPostPicture(\"\");\n            }\n          }\n        };\n\n         handleVideo(); \n\n    }, [userData, message, video])\n\n    \n\n    return (\n      <div className=\"post-container\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            <NavLink exact to=\"/profil\">\n              <div className=\"user-info\">\n                <img src={userData.picture} alt=\"\" />\n                <img\n                  src=\"./img/cadre_brush_orange.png\"\n                  alt=\"cadre\"\n                  className=\"profil-post-border\"\n                />\n              </div>\n            </NavLink>\n            <div className=\"border-post\">\n              <div className=\"new-post\">\n                <div className=\"right-part-post\"></div>\n                <div className=\"left-part-post\">\n                  <div className=\"follow-counters\">\n                    <p>\n                      <span>\n                        {userData.following ? userData.following.length : \"0\"}\n                      </span>{\" \"}\n                      Abonnement\n                      {userData.following && userData.following.length > 1\n                        ? \"s\"\n                        : null}\n                    </p>\n                    <p>\n                      <span>\n                        {userData.followers ? userData.followers.length : \"0\"}\n                      </span>{\" \"}\n                      Abonné\n                      {userData.followers && userData.followers.length > 1\n                        ? \"s\"\n                        : null}\n                    </p>\n                  </div>\n                  <div className=\"post-title\">\n                    {actualWidth < 481 ? (\n                      <h3>\n                        Vas-y{\" \"}\n                        <NavLink exact to=\"/profil\">\n                          <span id=\"pseudo\">{userData.pseudo}</span>\n                        </NavLink>\n                        , exprime-toi !\n                      </h3>\n                    ) : (\n                      <h3>\n                        Vas-y <span id=\"pseudo\">{userData.pseudo}</span>, prends\n                        ton pinceau et exprime-toi !\n                      </h3>\n                    )}\n                  </div>\n                  <div className=\"new-post-area\">\n                    <div className=\"post-form\">\n                      <img src={pen} alt=\"icon\" id=\"pen-new-post\" />\n                      <textarea\n                        name=\"message\"\n                        id=\"message\"\n                        placeholder=\"Tache d'être explicite...\"\n                        onChange={handleChange}\n                        value={message}\n                      />\n                      <div className=\"icon\">\n                        {isEmpty(video) && (\n                          <>\n                            <label htmlFor=\"file\">\n                              <img src={tof} alt=\"img\" />\n                            </label>\n                            <input\n                              type=\"file\"\n                              id=\"file-upload\"\n                              name=\"file\"\n                              accept=\".jpg, .jpeg, .png\"\n                              onChange={(e) => handlePicture(e)}\n                            />\n                          </>\n                        )}\n                        {video && (\n                          <button className=\"sup-video-btn\" onClick={() => setVideo(\"\")}>\n                            Supprimer video\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"footer-new-post\">\n                <div className=\"card-container\">\n                  <div className=\"card-content\">\n                    {postPicture && (\n                      <>\n                        <img\n                          width=\"180\"\n                          height=\"180\"\n                          src={postPicture}\n                          alt=\"\"\n                          id=\"thumb-post-picture\"\n                        />\n                        <img\n                          width=\"210\"\n                          height=\"210\"\n                          src={border}\n                          alt=\"border-paint\"\n                          id=\"border-picture\"\n                        />\n                      </>\n                    )}\n                    {video && (\n                      <>\n                        <img\n                          width=\"340\"\n                          height=\"212\"\n                          src={border}\n                          alt=\"border-paint\"\n                          id=\"border-video\"\n                        />\n                        <iframe\n                          width=\"300\"\n                          height=\"180\"\n                          src={video}\n                          frameborder=\"0\"\n                          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                          allowFullScreen\n                          title={video}\n                          id=\"thumb-post-video\"\n                        ></iframe>\n                      </>\n                    )}\n                  </div>\n                </div>\n                <div className=\"error-messages\">\n                  {errorMessage ? (\n                    <p>ça va être compliqué comme ça</p>\n                  ) : (\n                    <p> </p>\n                  )}\n                  {!isEmpty(error.format) && <p>{error.format}</p>}\n                  {!isEmpty(error.maxSize) && <p>{error.maxSize}</p>}\n                </div>\n              </div>\n\n              <div className=\"btn-send\">\n                {message || postPicture || video.length > 20 ? (\n                  <button className=\"cancel\" onClick={cancelPost}>\n                    Annuler\n                  </button>\n                ) : null}\n                <button className=\"send\" onClick={handlePost}>\n                  Envoyer\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n};\n\nexport default NewPostForm;","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Stains/FootStains.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Profil/FriendsHint.js",["196","197"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Loader from '../Loader';\nimport { isEmpty } from '../Utils';\nimport FollowHandler from './FollowHandler';\n\nconst FriendsHint = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [playOnce, setPlayOnce] = useState(true);\n    const [friendHint, setFriendsHint] = useState([]);\n    const userData = useSelector((state) => state.userReducer);\n    const usersData = useSelector((state) => state.usersReducer);\n\n    \n\n    useEffect(() => {\n        const notFriendsList = () => {\n          let array = [];\n          usersData.map((user) => {\n            if (\n              user._id !== userData._id &&\n              !user.followers.includes(userData._id)\n            )\n              return array.push(user._id);\n          });\n          array.sort(() => 0.5 - Math.random());\n          if (window.innerHeight > 780) {\n            array.length = 5;\n          } else if (window.innerHeight > 720) {\n            array.length = 4;\n          } else if (window.innerHeight > 615) {\n            array.length = 2;\n          } else if (window.innerHeight > 540) {\n            array.length = 1;\n          } else {\n              array.length = 0;\n          }\n          setFriendsHint(array);\n        };\n\n        if (playOnce && !isEmpty(usersData[0]) && !isEmpty(userData._id)) {\n            notFriendsList();\n            setIsLoading(false);\n            setPlayOnce(false);\n        }\n    }, [usersData, userData, playOnce])\n\n    return (\n        <div className=\"get-friends-container\">\n            <h4 className=\"newfriend-title\">Suggestions</h4>\n            {isLoading ? (\n                    <Loader />\n                ) : (\n                    <ul>\n                        {friendHint && friendHint.map((user, index) => {\n                            for (let i = 0; i < usersData.length; i ++) {\n                                if (user === usersData[i]._id) {\n                                    return (\n                                      <li className=\"user-hint\" key={index}>\n                                        <img\n                                          src={usersData[i].picture}\n                                          alt=\"user-pic\"\n                                          className=\"user-pic\"\n                                        />\n                                        <img\n                                          src=\"./img/cadre_brush_orange.png\"\n                                          alt=\"cadre\"\n                                          className=\"border-hint\"\n                                        />\n                                        <p>{usersData[i].pseudo}</p>\n                                        <FollowHandler\n                                          idToFollow={usersData[i]._id}\n                                          type={\"suggestion\"}\n                                        />\n                                      </li>\n                                    );\n                                 }\n                            }\n                        } \n                        )} \n                    </ul>\n                      )}\n        </div>\n  \n    );\n};\n\nexport default FriendsHint;","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Profil/UpdateProfil.js",["198","199"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Uploadimg from './Uploadimg';\nimport { updateBio } from '../../actions/user.actions';\nimport { dateParser } from '../Utils';\nimport FriendsHint from \"./FriendsHint\";\nimport FollowHandler from './FollowHandler';\nimport { uploadPicture } from \"../../actions/user.actions\";\nimport { Link } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nconst UpdateProfil = () => {\n    const userData = useSelector((state) => state.userReducer);\n    const usersData = useSelector((state) => state.usersReducer);\n    const error = useSelector((state) => state.errorReducer.userError)\n    const [bio, setBio]= useState(''); \n    const [updateForm, setUpdateForm]= useState(false); \n    const dispatch= useDispatch();\n    const [file, setFile] = useState();\n    \n   \n\n\n    const handleUpdate = () => {\n        dispatch(updateBio(userData._id, bio));\n        setUpdateForm(false);\n    };\n\n    const handlePicture = (e) => {\n      e.preventDefault();\n      const data = new FormData();\n      data.append(\"name\", userData.pseudo);\n      data.append(\"userId\", userData._id);\n      data.append(\"file\", file);\n\n      dispatch(uploadPicture(data, userData._id));\n    };\n\n  \n\n    return (\n      <div className=\"profil-container\">\n        <h2>Voilà ton profil, </h2>\n        <h1>{userData.pseudo}</h1>\n        <div className=\"update-container\">\n          <div className=\"left-part\">\n            <h3>Ta Tête</h3>\n            <img\n              src={userData.picture}\n              alt=\"photo_profil\"\n              className=\"user-pic\"\n            />\n            <Uploadimg\n              label=\"Change de tête\"\n              setFile={setFile}\n              handlePicture={handlePicture}\n            />\n            <p>{error.maxSize}</p>\n            <p>{error.format}</p>\n          </div>\n          <div className=\"center-part\">\n            {!updateForm ? (\n              <div className=\"bio-update\">\n                <h3>Ta description</h3>\n                <p onClick={() => setUpdateForm(!updateForm)}>{userData.bio}</p>\n                <button\n                  className=\"update-bio-btn\"\n                  onClick={() => setUpdateForm(!updateForm)}\n                >\n                  Modifier\n                </button>\n                <Link to=\"/\">\n                  <button id=\"back-home\">Retour à l'accueil</button>\n                </Link>\n              </div>\n            ) : (\n              <div className=\"bio-update\">\n                <h3>Raconte ta vie mais fais court stp</h3>\n                <textarea\n                  type=\"text\"\n                  defaultValue={userData.bio}\n                  onChange={(e) => setBio(e.target.value)}\n                ></textarea>\n                <button className=\"update-bio-btn\" onClick={handleUpdate}>\n                  Valider\n                </button>\n                <Link to=\"/\">\n                  <button id=\"back-home\">Retour à l'accueil</button>\n                </Link>\n              </div>\n            )}\n          </div>\n          <div className=\"right-part\">\n            <h4 className=\"since\">\n              Pilote dans notre écurie depuis le{\" \"}\n              {dateParser(userData.createdAt)}\n            </h4>\n\n            <div className=\"followers-count\">\n              <div className=\"follow-titles\">\n                <span>\n                  Abonné\n                  {userData.followers && userData.followers.length > 1\n                    ? \"s\"\n                    : null}{\" \"}\n                  :{\" \"}\n                </span>\n                <span>\n                  {userData.followers ? userData.followers.length : \"\"}\n                </span>\n              </div>\n              <div className=\"followers-list-profil\">\n                <div className=\"list-follo\">\n                  {usersData.map((user) => {\n                    for (let i = 0; i < userData.followers.length; i++) {\n                      if (user._id === userData.followers[i]) {\n                        return (\n                          <dix className=\"follo\" key={user._id}>\n                            <img\n                              src={user.picture}\n                              alt=\"user-pic\"\n                              className=\"user-profil-pic\"\n                            />\n                            <img\n                              src=\"./img/cadre_brush.png\"\n                              alt=\"cadre\"\n                              className=\"cadre\"\n                            />\n                            <h4 className=\"pseudo-follow\">{user.pseudo}</h4>\n                            <div className=\"follow-handler\">\n                              <FollowHandler\n                                idToFollow={user._id}\n                                type={\"card\"}\n                              />\n                            </div>\n                          </dix>\n                        );\n                      }\n                    }\n                    return null;\n                  })}\n                </div>\n              </div>\n            </div>\n            <div className=\"follow-count\">\n              <div className=\"follow-titles\">\n                <span>\n                  Abonnement\n                  {userData.following && userData.following.length > 1\n                    ? \"s\"\n                    : null}{\" \"}\n                  :{\" \"}\n                </span>{\" \"}\n                <span>\n                  {userData.following ? userData.following.length : \"\"}\n                </span>\n              </div>\n              <div className=\"followings-list-profil\">\n                <div className=\"list-follo\">\n                  {usersData.map((user) => {\n                    for (let i = 0; i < userData.following.length; i++) {\n                      if (user._id === userData.following[i]) {\n                        return (\n                          <div className=\"follo\" key={user._id}>\n                            <img\n                              src={user.picture}\n                              alt=\"user-pic\"\n                              className=\"user-profil-pic\"\n                            />\n                            <img\n                              src=\"./img/cadre_brush_orange.png\"\n                              alt=\"cadre\"\n                              className=\"cadre\"\n                            />\n                            <h4 className=\"pseudo-follow\">{user.pseudo}</h4>\n                            <div className=\"follow-handler\">\n                              <FollowHandler\n                                idToFollow={user._id}\n                                type={\"card\"}\n                              />\n                            </div>\n                          </div>\n                        );\n                      }\n                    }\n                    return null;\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        {/* {followingPopUp && (\n          <div className=\"popup-profil-container\">\n            <div className=\"modal\">\n              <h3>Qui tu suis</h3>\n              <span className=\"cross\" onClick={(e) => setFollowingPopUp(false)}>\n                &#10005;\n              </span>\n              <ul>\n                {usersData.map((user) => {\n                  for (let i = 0; i < userData.following.length; i++) {\n                    if (user._id === userData.following[i]) {\n                      return (\n                        <li key={user._id}>\n                          <img src={user.picture} alt=\"user-pic\" />\n                          <h4>{user.pseudo}</h4>\n                          <div className=\"follow-handler\">\n                            <FollowHandler\n                              idToFollow={user._id}\n                              type={\"suggestion\"}\n                            />\n                          </div>\n                        </li>\n                      );\n                    }\n                  }\n                  return null;\n                })}\n              </ul>\n            </div>\n          </div>\n        )}\n        {followersPopUp && (\n          <div className=\"popup-profil-container\">\n            <div className=\"modal\">\n              <h3>Tes abonnés</h3>\n              <span className=\"cross\" onClick={(e) => setFollowersPopUp(false)}>\n                &#10005;\n              </span>\n              <ul>\n                {usersData.map((user) => {\n                  for (let i = 0; i < userData.followers.length; i++) {\n                    if (user._id === userData.followers[i]) {\n                      return (\n                        <li key={user._id}>\n                          <img src={user.picture} alt=\"user-pic\" />\n                          <h4>{user.pseudo}</h4>\n                          <div className=\"follow-handler\">\n                            <FollowHandler\n                              idToFollow={user._id}\n                              type={\"suggestion\"}\n                            />\n                          </div>\n                        </li>\n                      );\n                    }\n                  }\n                  return null;\n                })}\n              </ul>\n            </div>\n          </div>\n        )} */}\n      </div>\n    );\n};\n\nexport default UpdateProfil;","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Post/Card.js",["200","201","202"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updatePost } from '../../actions/post.actions';\nimport FollowHandler from '../Profil/FollowHandler';\nimport { isEmpty, dateParser } from '../Utils';\nimport CardComments from './CardComments';\nimport DeleteCard from './DeleteCard';\nimport LikeButton from './LikeButton';\nimport { addComment, getPosts } from \"../../actions/post.actions\";\nimport { Link } from 'react-router-dom';\nimport { UidContext } from \"../AppContext\";\nimport { uploadPicture } from '../../actions/user.actions';\nimport Uploadimg from '../Profil/Uploadimg';\nimport Loader from '../Loader';\n\n\nconst Card = ({post, setBtnNewPost, actualWidth}) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [isUpdated, setIsUpdated] = useState(false);\n    const [textUpdate, setTextUpdate] = useState(null);\n    const [showComments, setShowComments] = useState(false);\n     const [text, setText] = useState(\"\");\n    const [imgComment, setImgComment] = useState('./img/icons/comments.png');\n    const [imgShare, setImgShare] = useState('./img/icons/share.png');\n    const [updateImg, setUpdateImg] = useState(false);\n    const [imgBrushText, setImgBrushText] = useState('./img/brush_textarea_user.png');\n    const [modalMedia, setModalMedia] = useState(false);\n\n    const userData = useSelector((state) => state.userReducer);\n    const usersData = useSelector((state) => state.usersReducer);\n\n    const dispatch = useDispatch();\n\n    const cardFooter = document.getElementsByClassName('card-footer');\n    const uid = useContext(UidContext);\n\n    const upDateItem = () => {\n      if (textUpdate) {\n        dispatch(updatePost(post._id, textUpdate))\n      }\n      setIsUpdated(false)\n    }\n\n    const handleComment = (e) => {\n      e.preventDefault();\n\n      if (text) {\n        dispatch(addComment(post._id, userData._id, text, userData.pseudo))\n          .then(() => dispatch(getPosts()))\n          .then(() => setText(\"\"));\n      }\n    };\n\n    const handleClick = () => {\n      setIsUpdated(!isUpdated) \n      setBtnNewPost(false)\n    }\n\n    const handleMedia =() => {\n      setModalMedia(true);\n    }\n    const handleShowComments =() => {\n      setShowComments(!showComments)\n      setBtnNewPost(false);\n    }\n\n\n\n    useEffect(() => {\n        !isEmpty(usersData[0]) && setIsLoading(false);\n    }, [usersData]);\n\n    return (\n      <div className=\"card-complete\">\n        <li key={post._id}>\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              <div\n                className={\n                  !post.picture && !post.video\n                    ? \"card-container light\"\n                    : \"card-container\"\n                }\n              >\n                <div className=\"card-left\">\n                  <img\n                    src={\n                      !isEmpty(usersData[0]) &&\n                      usersData\n                        .map((user) => {\n                          if (user._id === post.posterId) return user.picture;\n                          else return null;\n                        })\n                        .join(\"\")\n                    }\n                    alt=\"poster-pic\"\n                    className=\"poster_pic\"\n                  />\n                  <img\n                    src=\"./img/cadre_brush.png\"\n                    alt=\"cadre\"\n                    className=\"cadre\"\n                  />\n\n                  {userData._id === post.posterId && (\n                    <div className=\"button-container\">\n                      <div onClick={handleClick}>\n                        <img\n                          src=\"./img/icons/marker.png\"\n                          alt=\"edit\"\n                          id=\"marker\"\n                        />\n                      </div>\n                      <DeleteCard id={post._id} />\n                    </div>\n                  )}\n                </div>\n                <div className=\"card-right\">\n                  <div className=\"card-header\">\n                    <div className=\"pseudo\">\n                      <h3>\n                        {!isEmpty(usersData[0]) &&\n                          usersData\n                            .map((user) => {\n                              if (user._id === post.posterId)\n                                return user.pseudo;\n                              else return null;\n                            })\n                            .join(\"\")}\n                      </h3>\n                      {post.posterId !== userData._id && (\n                        <FollowHandler\n                          idToFollow={post.posterId}\n                          type={\"card\"}\n                        />\n                      )}\n                    </div>\n                    <span>{dateParser(post.createdAt)}</span>\n                  </div>\n                  {isUpdated === false && (\n                    <div className=\"message-complete\">\n                      <img\n                        src=\"./img/stain_text.png\"\n                        alt=\"stain-text\"\n                        id=\"stain_text\"\n                      />\n                      <div className=\"message\">\n                        <p>{post.message}</p>\n                      </div>\n                    </div>\n                  )}\n                  {isUpdated && (\n                    <div className=\"update-post\">\n                      <img\n                        src={imgBrushText}\n                        alt=\"brush-text\"\n                        id=\"brush-text\"\n                      />\n                      <textarea\n                        defaultValue={post.message}\n                        onChange={(e) => setTextUpdate(e.target.value)}\n                        onFocus={(e) =>\n                          setImgBrushText(\"./img/brush_textarea.png\")\n                        }\n                      />\n                      <div className=\"button-container\">\n                        <div className=\"btn\" onClick={upDateItem}>\n                          Modifie\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {isUpdated && post.picture ? (\n                    <>\n                      <div className=\"update-post-picture\">\n                        {post.picture ? (\n                          <>\n                            <img\n                              src={post.picture}\n                              alt=\"card-pic\"\n                              className=\"update-card-pic\"\n                            />\n                            <img\n                              onClick={() => {\n                                setUpdateImg(true);\n                              }}\n                              src=\"./img/cadre_brush.png\"\n                              alt=\"cadre\"\n                              className=\"update-border\"\n                            />\n                            {updateImg && <Uploadimg />}\n                          </>\n                        ) : (\n                          isUpdated &&\n                          !post.picture &&\n                          !post.video && (\n                            <>\n                              <div className=\"add-pic\">\n                                <div className=\"plus\">+</div>\n                                <span>Ajoute une image</span>\n                              </div>\n                              <img\n                                onClick={() => {\n                                  setUpdateImg(true);\n                                }}\n                                src=\"./img/cadre_brush.png\"\n                                alt=\"cadre\"\n                                className=\"update-border\"\n                              />\n                              {updateImg && <Uploadimg />}\n                            </>\n                          )\n                        )}\n                      </div>\n                    </>\n                  ) : post.picture ? (\n                    <>\n                      <div className=\"post-picture\">\n                        <img\n                          src={post.picture}\n                          alt=\"card-pic\"\n                          className=\"card-pic\"\n                        />\n                      </div>\n                      <img\n                        src=\"./img/cadre_brush_orange.png\"\n                        alt=\"cadre\"\n                        className=\"border-post-picture\"\n                        onClick={handleMedia}\n                      />\n                    </>\n                  ) : null}\n\n                  {isUpdated && post.video ? (\n                    <div className=\"post-video\">\n                      <img\n                        width=\"226\"\n                        height=\"132\"\n                        src=\"./img/cadre_brush.png\"\n                        alt=\"cadre\"\n                        className=\"border-update-card-video\"\n                      />\n                      <iframe\n                        width=\"193\"\n                        height=\"116\"\n                        src={post.video}\n                        frameborder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        title={post._id}\n                        className=\"update-video\"\n                      ></iframe>\n                    </div>\n                  ) : !isUpdated && post.video ? (\n                    <div className=\"post-video\">\n                      <img\n                        width=\"270\"\n                        height=\"150\"\n                        src=\"./img/cadre_brush_orange.png\"\n                        alt=\"cadre\"\n                        className=\"border-card-video\"\n                      />\n                      <iframe\n                        width=\"232\"\n                        height=\"129\"\n                        src={post.video}\n                        frameborder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        title={post._id}\n                        className=\"post-video-iframe\"\n                      ></iframe>\n                    </div>\n                  ) : null}\n                </div>\n              </div>\n              {uid ? (\n                !isUpdated ? (\n                  <>\n                    <div\n                      className=\"card-footer\"\n                      style={{ marginBottom: \"120\" }}\n                    >\n                      <div\n                        className=\"comment-icon\"\n                        onMouseEnter={() =>\n                          setImgComment(\"./img/icons/comments_hover.png\")\n                        }\n                        onMouseLeave={() =>\n                          setImgComment(\"./img/icons/comments.png\")\n                        }\n                      >\n                        <img\n                          onClick={handleShowComments}\n                          src={imgComment}\n                          alt=\"comment\"\n                        />\n                        <span>{post.comments.length}</span>\n                      </div>\n                      <LikeButton post={post} />\n                      <Link\n                        to={{\n                          pathname:\n                            \"https://www.linkedin.com/in/jordane-lepart-071370189/\",\n                        }}\n                        target=\"_blank\"\n                        onMouseEnter={() =>\n                          setImgShare(\"./img/icons/share_hover.png\")\n                        }\n                        onMouseLeave={() =>\n                          setImgShare(\"./img/icons/share.png\")\n                        }\n                      >\n                        <img src={imgShare} alt=\"share\" />\n                      </Link>\n                    </div>\n\n                    <div className=\"card-comments\">\n                      {showComments && (\n                        <CardComments post={post} actualWidth={actualWidth} />\n                      )}\n                      {userData._id && (\n                        <form\n                          action=\"\"\n                          onSubmit={handleComment}\n                          className=\"comment-form\"\n                        >\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            onChange={(e) => setText(e.target.value)}\n                            value={text}\n                            className=\"post-comment\"\n                            placeholder=\"Réagir...\"\n                          />\n                          <input\n                            type=\"submit\"\n                            value=\"Go\"\n                            className=\"post-comment-btn\"\n                          />\n                        </form>\n                      )}\n                    </div>\n                  </>\n                ) : (\n                  <div className=\"empty-space\"></div>\n                )\n              ) : null}\n            </>\n          )}\n        </li>\n      </div>\n    );\n};\n\nexport default Card;","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Stains/HeadStains.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Log/index.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Profil/FollowHandler.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Profil/Uploadimg.js",["203","204","205"],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n\nconst Uploadimg = ({label, handlePicture, setFile}) => {\n \n\n  \n\n  return (\n    <form action=\"\" onSubmit={handlePicture} className=\"upload-pic\">\n      <label htmlFor=\"file\">{label}</label>\n      <input\n        type=\"file\"\n        id=\"file\"\n        name=\"file\"\n        accept=\".jpg, .jpeg, .png\"\n        onChange={(e) => setFile(e.target.files[0])}\n      />\n      <br/>\n      <input type=\"submit\" value=\"OK\"/>\n    </form>\n  );\n};\n\nexport default Uploadimg;\n","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Post/CardComments.js",["206","207"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport FollowHandler from '../Profil/FollowHandler';\nimport { isEmpty, timestampParser } from '../Utils';\nimport EditDeleteComment from './EditDeleteComment';\n\nconst CardComments = ( { post, actualWidth } ) => {\n   \n    \n    const userData = useSelector((state) => state.userReducer);\n    const usersData = useSelector((state) => state.usersReducer);\n    const dispatch = useDispatch();\n\n    \n\n    return (\n        <>\n            {post.comments.map((comment) => {\n                return (\n                  <div\n                    className={\n                      comment.commenterId === userData._id\n                        ? \"comment-container-client\"\n                        : \"comment-container\"\n                    }\n                    key={comment._id}\n                  >\n                    <div className=\"comment-top\">\n                      {actualWidth > 480 ? (\n                        <div className=\"left-part\">\n                          <img\n                            src={\n                              !isEmpty(usersData[0]) &&\n                              usersData\n                                .map((user) => {\n                                  if (user._id === comment.commenterId)\n                                    return user.picture;\n                                  else return null;\n                                })\n                                .join(\"\")\n                            }\n                            alt=\"commenter-pic\"\n                            className=\"commenter-pic\"\n                          />\n                        </div>\n                      ) : null}\n                      <div className=\"right-part\">\n                        <div className=\"comment-header\">\n                          <div className=\"pseudo\">\n                            {actualWidth < 481 && (\n                              <img\n                                src={\n                                  !isEmpty(usersData[0]) &&\n                                  usersData\n                                    .map((user) => {\n                                      if (user._id === comment.commenterId)\n                                        return user.picture;\n                                      else return null;\n                                    })\n                                    .join(\"\")\n                                }\n                                alt=\"commenter-pic\"\n                                className=\"commenter-pic\"\n                              />\n                            )}\n                            <h3>{comment.commenterPseudo}</h3>\n                            {comment.commenterId !== userData._id && (\n                              <FollowHandler\n                                idToFollow={comment.commenterId}\n                                type={\"card\"}\n                              />\n                            )}\n                          </div>\n                          <div className=\"date-post\">\n                            {timestampParser(comment.timestamp)}\n                          </div>\n                        </div>\n                        <p className=\"comment\">{comment.text}</p>\n                      </div>\n                    </div>\n                    <EditDeleteComment comment={comment} postId={post._id} />\n                  </div>\n                );\n            })}\n            \n        </>\n    );\n};\n\nexport default CardComments;","/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Post/DeleteCard.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Post/LikeButton.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Log/SignUpForm.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Log/SignInForm.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Post/EditDeleteComment.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Loader.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/pages/NotFound.js",["208","209"],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Modal/ModalNewPost.js",[],"/Users/user/Desktop/Work/www/rezoso_react/client/src/components/Footer.js",["210","211"],{"ruleId":"212","severity":1,"message":"213","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":23},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":23,"column":6,"nodeType":"222","endLine":23,"endColumn":8,"suggestions":"223"},{"ruleId":"212","severity":1,"message":"224","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":14},{"ruleId":"212","severity":1,"message":"225","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":11},{"ruleId":"220","severity":1,"message":"221","line":27,"column":4,"nodeType":"222","endLine":27,"endColumn":6,"suggestions":"226"},{"ruleId":"212","severity":1,"message":"227","line":8,"column":8,"nodeType":"214","messageId":"215","endLine":8,"endColumn":18},{"ruleId":"212","severity":1,"message":"224","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":14},{"ruleId":"220","severity":1,"message":"221","line":25,"column":6,"nodeType":"222","endLine":25,"endColumn":8,"suggestions":"228"},{"ruleId":"212","severity":1,"message":"229","line":1,"column":28,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"230","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":14},{"ruleId":"212","severity":1,"message":"231","line":5,"column":19,"nodeType":"214","messageId":"215","endLine":5,"endColumn":34},{"ruleId":"232","severity":1,"message":"233","line":19,"column":32,"nodeType":"234","messageId":"235","endLine":19,"endColumn":34},{"ruleId":"232","severity":1,"message":"233","line":55,"column":69,"nodeType":"234","messageId":"235","endLine":55,"endColumn":71},{"ruleId":"212","severity":1,"message":"236","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":19},{"ruleId":"212","severity":1,"message":"237","line":10,"column":10,"nodeType":"214","messageId":"215","endLine":10,"endColumn":19},{"ruleId":"212","severity":1,"message":"238","line":12,"column":10,"nodeType":"214","messageId":"215","endLine":12,"endColumn":23},{"ruleId":"212","severity":1,"message":"239","line":27,"column":12,"nodeType":"214","messageId":"215","endLine":27,"endColumn":22},{"ruleId":"212","severity":1,"message":"240","line":34,"column":11,"nodeType":"214","messageId":"215","endLine":34,"endColumn":21},{"ruleId":"212","severity":1,"message":"229","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"212","severity":1,"message":"241","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":21},{"ruleId":"212","severity":1,"message":"242","line":2,"column":23,"nodeType":"214","messageId":"215","endLine":2,"endColumn":34},{"ruleId":"212","severity":1,"message":"229","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"212","severity":1,"message":"243","line":13,"column":11,"nodeType":"214","messageId":"215","endLine":13,"endColumn":19},{"ruleId":"212","severity":1,"message":"244","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":14},{"ruleId":"212","severity":1,"message":"227","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":18},{"ruleId":"245","severity":1,"message":"246","line":89,"column":15,"nodeType":"247","endLine":89,"endColumn":60},{"ruleId":"245","severity":1,"message":"246","line":100,"column":15,"nodeType":"247","endLine":100,"endColumn":58},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["248"],"no-negated-in-lhs",["249"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'actualWidth'. Either include it or remove the dependency array.","ArrayExpression",["250"],"'Footer' is defined but never used.","'Log' is defined but never used.",["251"],"'FootStains' is defined but never used.",["252"],"'useState' is defined but never used.","'Link' is defined but never used.","'timestampParser' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'FriendsHint' is defined but never used.","'useEffect' is defined but never used.","'uploadPicture' is defined but never used.","'modalMedia' is assigned a value but never used.","'cardFooter' is assigned a value but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'dispatch' is assigned a value but never used.","'Loader' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"253","fix":"255"},{"desc":"253","fix":"256"},"Update the dependencies array to be: [actualWidth]",{"range":"257","text":"258"},{"range":"259","text":"258"},{"range":"260","text":"258"},[729,731],"[actualWidth]",[1003,1005],[782,784]]